{"ast":null,"code":"import { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nclass MyComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFocused: false\n    };\n    this.videoStream = null;\n    this.videoElement = null;\n    this.startVideoStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        this.videoStream = stream;\n        this.videoElement = document.createElement('video');\n        this.videoElement.srcObject = stream;\n        this.videoElement.autoplay = true;\n        this.videoElement.playsInline = true;\n        this.videoElement.onloadedmetadata = () => {\n          // Do something when metadata is loaded, if needed\n        };\n        document.body.appendChild(this.videoElement); // Add the video element to the body or another container\n      } catch (error) {\n        console.error('Error accessing camera:', error);\n      }\n    };\n    this.stopVideoStream = () => {\n      if (this.videoStream) {\n        this.videoStream.getTracks().forEach(track => track.stop());\n      }\n      if (this.videoElement) {\n        this.videoElement.srcObject = null;\n        this.videoElement.remove();\n      }\n    };\n    this.render = () => {\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      if (theme) {\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : 'gray'}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n      }\n      return null; // Return null because we are appending the video element to the body directly\n    };\n  }\n  componentDidMount() {\n    this.startVideoStream();\n  }\n  componentWillUnmount() {\n    this.stopVideoStream();\n  }\n}\nexport default _c = withStreamlitConnection(MyComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","MyComponent","constructor","args","state","isFocused","videoStream","videoElement","startVideoStream","stream","navigator","mediaDevices","getUserMedia","video","document","createElement","srcObject","autoplay","playsInline","onloadedmetadata","body","appendChild","error","console","stopVideoStream","getTracks","forEach","track","stop","remove","render","theme","props","style","borderStyling","primaryColor","border","outline","componentDidMount","componentWillUnmount","_c","$RefreshReg$"],"sources":["/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\n\ninterface State {\n  isFocused: boolean;\n}\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state = { isFocused: false };\n  private videoStream: MediaStream | null = null;\n  private videoElement: HTMLVideoElement | null = null;\n\n  public componentDidMount(): void {\n    this.startVideoStream();\n  }\n\n  public componentWillUnmount(): void {\n    this.stopVideoStream();\n  }\n\n  private startVideoStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      this.videoStream = stream;\n\n      this.videoElement = document.createElement('video');\n      this.videoElement.srcObject = stream;\n      this.videoElement.autoplay = true;\n      this.videoElement.playsInline = true;\n\n      this.videoElement.onloadedmetadata = () => {\n        // Do something when metadata is loaded, if needed\n      };\n\n      document.body.appendChild(this.videoElement); // Add the video element to the body or another container\n\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n    }\n  };\n\n  private stopVideoStream = () => {\n    if (this.videoStream) {\n      this.videoStream.getTracks().forEach((track) => track.stop());\n    }\n    if (this.videoElement) {\n      this.videoElement.srcObject = null;\n      this.videoElement.remove();\n    }\n  };\n\n  public render = (): ReactNode => {\n    const { theme } = this.props;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : 'gray'\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return null; // Return null because we are appending the video element to the body directly\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);\n"],"mappings":"AACA,SAEEA,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAMhC,MAAMC,WAAW,SAASF,sBAAsB,CAAQ;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC/CC,KAAK,GAAG;MAAEC,SAAS,EAAE;IAAM,CAAC;IAAA,KAC3BC,WAAW,GAAuB,IAAI;IAAA,KACtCC,YAAY,GAA4B,IAAI;IAAA,KAU5CC,gBAAgB,GAAG,YAAY;MACrC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,IAAI,CAACP,WAAW,GAAGG,MAAM;QAEzB,IAAI,CAACF,YAAY,GAAGO,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;QACnD,IAAI,CAACR,YAAY,CAACS,SAAS,GAAGP,MAAM;QACpC,IAAI,CAACF,YAAY,CAACU,QAAQ,GAAG,IAAI;QACjC,IAAI,CAACV,YAAY,CAACW,WAAW,GAAG,IAAI;QAEpC,IAAI,CAACX,YAAY,CAACY,gBAAgB,GAAG,MAAM;UACzC;QAAA,CACD;QAEDL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAAC,IAAI,CAACd,YAAY,CAAC,CAAC,CAAC;MAEhD,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAAA,KAEOE,eAAe,GAAG,MAAM;MAC9B,IAAI,IAAI,CAAClB,WAAW,EAAE;QACpB,IAAI,CAACA,WAAW,CAACmB,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC/D;MACA,IAAI,IAAI,CAACrB,YAAY,EAAE;QACrB,IAAI,CAACA,YAAY,CAACS,SAAS,GAAG,IAAI;QAClC,IAAI,CAACT,YAAY,CAACsB,MAAM,CAAC,CAAC;MAC5B;IACF,CAAC;IAAA,KAEMC,MAAM,GAAG,MAAiB;MAC/B,MAAM;QAAEC;MAAM,CAAC,GAAG,IAAI,CAACC,KAAK;MAC5B,MAAMC,KAA0B,GAAG,CAAC,CAAC;MAErC,IAAIF,KAAK,EAAE;QACT,MAAMG,aAAa,GAAI,aACrB,IAAI,CAAC9B,KAAK,CAACC,SAAS,GAAG0B,KAAK,CAACI,YAAY,GAAG,MAC7C,EAAC;QACFF,KAAK,CAACG,MAAM,GAAGF,aAAa;QAC5BD,KAAK,CAACI,OAAO,GAAGH,aAAa;MAC/B;MAEA,OAAO,IAAI,CAAC,CAAC;IACf,CAAC;EAAA;EApDMI,iBAAiBA,CAAA,EAAS;IAC/B,IAAI,CAAC9B,gBAAgB,CAAC,CAAC;EACzB;EAEO+B,oBAAoBA,CAAA,EAAS;IAClC,IAAI,CAACf,eAAe,CAAC,CAAC;EACxB;AA+CF;AAEA,eAAAgB,EAAA,GAAexC,uBAAuB,CAACC,WAAW,CAAC;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}