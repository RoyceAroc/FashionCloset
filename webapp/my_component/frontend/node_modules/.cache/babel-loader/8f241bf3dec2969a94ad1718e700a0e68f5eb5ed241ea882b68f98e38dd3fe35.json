{"ast":null,"code":"var _jsxFileName = \"/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx\";\nimport React from \"react\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MyComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFocused: false,\n      isRecording: false\n    };\n    this.videoStream = null;\n    this.videoElement = null;\n    this.mediaRecorder = null;\n    this.recordedChunks = [];\n    this.startVideoStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        this.videoStream = stream;\n        this.videoElement = document.createElement('video');\n        this.videoElement.srcObject = stream;\n        this.videoElement.onloadedmetadata = () => {\n          var _this$videoElement;\n          // Optionally, you can autoplay the video here\n          (_this$videoElement = this.videoElement) === null || _this$videoElement === void 0 ? void 0 : _this$videoElement.play().catch(error => {\n            console.error('Error playing video:', error);\n          });\n        };\n        this.mediaRecorder = new MediaRecorder(stream);\n        this.mediaRecorder.ondataavailable = event => {\n          if (event.data.size > 0) {\n            this.recordedChunks.push(event.data);\n          }\n        };\n        this.mediaRecorder.onstop = () => {\n          const recordedBlob = new Blob(this.recordedChunks, {\n            type: 'video/webm'\n          });\n          this.recordedChunks = [];\n          const url = URL.createObjectURL(recordedBlob);\n          Streamlit.setComponentValue(url);\n        };\n      } catch (error) {\n        console.error('Error accessing camera:', error);\n      }\n    };\n    this.startRecording = () => {\n      if (this.mediaRecorder) {\n        this.recordedChunks = [];\n        this.mediaRecorder.start();\n        this.setState({\n          isRecording: true\n        });\n      }\n    };\n    this.stopRecording = () => {\n      if (this.mediaRecorder && this.state.isRecording) {\n        this.mediaRecorder.stop();\n        this.setState({\n          isRecording: false\n        });\n      }\n    };\n    this.render = () => {\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      if (theme) {\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : 'gray'}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          height: '600px'\n        },\n        children: [this.videoElement && /*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video) video.srcObject = this.videoStream;\n          },\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.startRecording,\n          disabled: this.state.isRecording,\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.stopRecording,\n          disabled: !this.state.isRecording,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  componentDidMount() {\n    this.startVideoStream();\n  }\n}\nexport default _c = withStreamlitConnection(MyComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Streamlit","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","MyComponent","constructor","args","state","isFocused","isRecording","videoStream","videoElement","mediaRecorder","recordedChunks","startVideoStream","stream","navigator","mediaDevices","getUserMedia","video","document","createElement","srcObject","onloadedmetadata","_this$videoElement","play","catch","error","console","MediaRecorder","ondataavailable","event","data","size","push","onstop","recordedBlob","Blob","type","url","URL","createObjectURL","setComponentValue","startRecording","start","setState","stopRecording","stop","render","theme","props","style","borderStyling","primaryColor","border","outline","display","flexDirection","alignItems","height","children","autoPlay","playsInline","ref","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","componentDidMount","_c","$RefreshReg$"],"sources":["/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\n\ninterface State {\n  isFocused: boolean;\n  isRecording: boolean;\n}\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state: State = {\n    isFocused: false,\n    isRecording: false,\n  };\n\n  private videoStream: MediaStream | null = null;\n  private videoElement: HTMLVideoElement | null = null;\n  private mediaRecorder: MediaRecorder | null = null;\n  private recordedChunks: Blob[] = [];\n\n  public componentDidMount(): void {\n    this.startVideoStream();\n  }\n  private startVideoStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      this.videoStream = stream;\n\n      this.videoElement = document.createElement('video');\n      this.videoElement.srcObject = stream;\n\n      this.videoElement.onloadedmetadata = () => {\n        // Optionally, you can autoplay the video here\n        this.videoElement?.play().catch((error) => {\n          console.error('Error playing video:', error);\n        });\n      };\n\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          this.recordedChunks.push(event.data);\n        }\n      };\n\n      this.mediaRecorder.onstop = () => {\n        const recordedBlob = new Blob(this.recordedChunks, { type: 'video/webm' });\n        this.recordedChunks = [];\n        const url = URL.createObjectURL(recordedBlob);\n        Streamlit.setComponentValue(url);\n      };\n\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n    }\n  };\n  \n  private startRecording = () => {\n    if (this.mediaRecorder) {\n      this.recordedChunks = [];\n      this.mediaRecorder.start();\n      this.setState({ isRecording: true });\n    }\n  };\n\n  private stopRecording = () => {\n    if (this.mediaRecorder && this.state.isRecording) {\n      this.mediaRecorder.stop();\n      this.setState({ isRecording: false });\n    }\n  };\n  \n  public render = (): ReactNode => {\n       const { theme } = this.props;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : 'gray'\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', height: '600px' }}>\n      {this.videoElement && (\n        <video\n          autoPlay\n          playsInline\n          ref={(video) => { if (video) video.srcObject = this.videoStream; }}\n          style={{ width: '100%', height: '100%' }}\n        />\n      )}\n      <button onClick={this.startRecording} disabled={this.state.isRecording}>\n        Start Recording\n      </button>\n      <button onClick={this.stopRecording} disabled={!this.state.isRecording}>\n        Stop Recording\n      </button>\n    </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}