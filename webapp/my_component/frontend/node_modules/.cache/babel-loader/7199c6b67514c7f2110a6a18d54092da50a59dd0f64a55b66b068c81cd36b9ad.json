{"ast":null,"code":"var _jsxFileName = \"/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = () => {\n  _s();\n  const webcamRef = React.useRef(null);\n  const [imageSrc, setImageSrc] = React.useState(undefined);\n  const [isRecording, setIsRecording] = React.useState(false);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n    console.log(imageSrc);\n  }, [webcamRef, setImageSrc]);\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n  useEffect(() => {\n    let captureInterval;\n    if (isRecording) {\n      captureInterval = setInterval(() => {\n        capture();\n      }, 1000);\n    } else {\n      clearInterval(captureInterval);\n    }\n    return () => {\n      clearInterval(captureInterval);\n    };\n  }, [isRecording, capture]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      forceScreenshotSourceSize: true,\n      videoConstraints: {\n        height: 720,\n        width: 1280\n      },\n      height: \"360\",\n      width: \"640\",\n      audio: true,\n      mirrored: true,\n      video: isRecording\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isRecording ? stopRecording : startRecording,\n        children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: \"captured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n_s(WebcamCapture, \"p1viv+r0EYi2Bs2nRJGP8ZzL1oM=\");\n_c = WebcamCapture;\nclass MyComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFocused: false\n    };\n    this.onFocus = () => {\n      this.setState({\n        isFocused: true\n      });\n    };\n    this.onBlur = () => {\n      this.setState({\n        isFocused: false\n      });\n    };\n    this.render = () => {\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      if (theme) {\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : \"gray\"}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WebcamCapture, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nexport default _c2 = withStreamlitConnection(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"WebcamCapture\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","useEffect","Webcam","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamCapture","_s","webcamRef","useRef","imageSrc","setImageSrc","useState","undefined","isRecording","setIsRecording","capture","useCallback","current","getScreenshot","console","log","startRecording","stopRecording","captureInterval","setInterval","clearInterval","children","ref","forceScreenshotSourceSize","videoConstraints","height","width","audio","mirrored","video","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","MyComponent","constructor","args","state","isFocused","onFocus","setState","onBlur","render","theme","props","style","borderStyling","primaryColor","border","outline","_c2","$RefreshReg$"],"sources":["/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst WebcamCapture = () => {\n  const webcamRef = React.useRef(null);\n  const [imageSrc, setImageSrc] = React.useState(undefined);\n  const [isRecording, setIsRecording] = React.useState(false);\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n    console.log(imageSrc);\n  }, [webcamRef, setImageSrc]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  useEffect(() => {\n    let captureInterval;\n\n    if (isRecording) {\n      captureInterval = setInterval(() => {\n        capture();\n      }, 1000);\n    } else {\n      clearInterval(captureInterval);\n    }\n\n    return () => {\n      clearInterval(captureInterval);\n    };\n  }, [isRecording, capture]);\n\n  return (\n    <>\n      <Webcam\n        ref={webcamRef}\n        forceScreenshotSourceSize\n        videoConstraints={{\n          height: 720,\n          width: 1280,\n        }}\n        height=\"360\"\n        width=\"640\"\n        audio={true}\n        mirrored={true}\n        video={isRecording}\n      />\n      <div>\n        <button onClick={isRecording ? stopRecording : startRecording}>\n          {isRecording ? \"Stop Recording\" : \"Start Recording\"}\n        </button>\n      </div>\n      {imageSrc && <img src={imageSrc} alt=\"captured\" />}\n    </>\n  );\n};\n\nclass MyComponent extends StreamlitComponentBase {\n  state = { isFocused: false };\n\n  onFocus = () => {\n    this.setState({ isFocused: true });\n  };\n\n  onBlur = () => {\n    this.setState({ isFocused: false });\n  };\n\n  render = (): ReactNode => {\n    const { theme } = this.props;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return (\n      <div>\n        <WebcamCapture />\n      </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}