{"ast":null,"code":"var _jsxFileName = \"/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useWebcamScreenshotInterval = duration => {\n  _s();\n  const intervalRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const [screenshots, setScreenshots] = useState([]);\n  useEffect(() => {\n    const constraints = {\n      audio: false,\n      video: true\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => setStream(stream)).catch(error => console.log(error));\n  }, []);\n  useEffect(() => {\n    if (stream !== null) {\n      const track = stream.getVideoTracks()[0];\n      const imageCapture = new ImageCapture(track);\n      intervalRef.current = setInterval(() => {\n        imageCapture.takePhoto().then(blob => {\n          setScreenshots(prevState => [...prevState, blob]);\n        }).catch(error => {\n          console.log(error);\n          clearInterval(intervalRef.current);\n        });\n      }, duration);\n    }\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, [stream, duration]);\n  return screenshots;\n};\n_s(useWebcamScreenshotInterval, \"tq5A6WRYKbfxx2qRrT1/mu2CuEw=\");\nclass MyComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFocused: false\n    };\n    this.screenshots = useWebcamScreenshotInterval(1000);\n    // Set the interval duration as needed\n    this.onFocus = () => {\n      this.setState({\n        isFocused: true\n      });\n    };\n    this.onBlur = () => {\n      this.setState({\n        isFocused: false\n      });\n    };\n    this.render = () => {\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      if (theme) {\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : \"gray\"}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.screenshots.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting for screenshots...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.screenshots.map((blob, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(blob),\n            alt: `screenshot-${index}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(MyComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","useEffect","useState","useRef","jsxDEV","_jsxDEV","useWebcamScreenshotInterval","duration","_s","intervalRef","stream","setStream","screenshots","setScreenshots","constraints","audio","video","navigator","mediaDevices","getUserMedia","then","catch","error","console","log","track","getVideoTracks","imageCapture","ImageCapture","current","setInterval","takePhoto","blob","prevState","clearInterval","MyComponent","constructor","args","state","isFocused","onFocus","setState","onBlur","render","theme","props","style","borderStyling","primaryColor","border","outline","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","URL","createObjectURL","alt","_c","$RefreshReg$"],"sources":["/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode, useEffect, useState, useRef } from \"react\";\n\nconst useWebcamScreenshotInterval = (duration) => {\n  const intervalRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const [screenshots, setScreenshots] = useState([]);\n\n  useEffect(() => {\n    const constraints = {\n      audio: false,\n      video: true,\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => setStream(stream))\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    if (stream !== null) {\n      const track = stream.getVideoTracks()[0];\n      const imageCapture = new ImageCapture(track);\n\n      intervalRef.current = setInterval(() => {\n        imageCapture\n          .takePhoto()\n          .then((blob) => {\n            setScreenshots((prevState) => [...prevState, blob]);\n          })\n          .catch((error) => {\n            console.log(error);\n            clearInterval(intervalRef.current);\n          });\n      }, duration);\n    }\n\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, [stream, duration]);\n\n  return screenshots;\n};\n\nclass MyComponent extends StreamlitComponentBase {\n  state = { isFocused: false };\n  screenshots = useWebcamScreenshotInterval(1000); // Set the interval duration as needed\n\n  onFocus = () => {\n    this.setState({ isFocused: true });\n  };\n\n  onBlur = () => {\n    this.setState({ isFocused: false });\n  };\n\n  render = (): ReactNode => {\n    const { theme } = this.props;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return (\n      <div>\n        {this.screenshots.length === 0 ? (\n          <p>Waiting for screenshots...</p>\n        ) : (\n          <div>\n            {this.screenshots.map((blob, index) => (\n              <img\n                key={index}\n                src={URL.createObjectURL(blob)}\n                alt={`screenshot-${index}`}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}