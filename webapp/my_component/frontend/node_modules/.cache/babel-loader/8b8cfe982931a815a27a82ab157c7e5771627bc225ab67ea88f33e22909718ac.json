{"ast":null,"code":"var _jsxFileName = \"/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = () => {\n  _s();\n  const webcamRef = React.useRef(null);\n  const [imageSrc, setImageSrc] = React.useState(undefined);\n  const [isRecording, setIsRecording] = React.useState(false);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"/script/pose.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n  const capture = React.useCallback(async () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    const imageData = {\n      instanceId: \"randomString\",\n      quaternion: undefined,\n      translationVector: undefined,\n      imageSrc: imageSrc\n    };\n    try {\n      // Fetch quaternion and translation data from the HTML document\n      const {\n        Quaternion,\n        \"Translation Vector\": translationVector\n      } = await window.getPoseData();\n      imageData.quaternion = Quaternion;\n      imageData.translationVector = translationVector;\n      Streamlit.setComponentValue({\n        imageData\n      });\n    } catch (error) {\n      console.error(\"Error fetching pose data:\", error);\n    }\n  }, [webcamRef, setImageSrc]);\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n  useEffect(() => {\n    let captureInterval;\n    if (isRecording) {\n      captureInterval = setInterval(() => {\n        capture();\n      }, 1000);\n    } else {\n      clearInterval(captureInterval);\n    }\n    return () => {\n      clearInterval(captureInterval);\n    };\n  }, [isRecording, capture]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      forceScreenshotSourceSize: true,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        height: 720,\n        width: 1280\n      },\n      height: \"360\",\n      width: \"640\",\n      audio: true,\n      mirrored: true,\n      video: isRecording\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          isRecording ? stopRecording() : startRecording();\n        },\n        children: isRecording ? \"Stop Recording\" : \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: \"captured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n_s(WebcamCapture, \"iHT6KtuTNa0J4YsZID1B5Vu3Byo=\");\n_c = WebcamCapture;\nclass MyComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFocused: false\n    };\n    this.onFocus = () => {\n      this.setState({\n        isFocused: true\n      });\n    };\n    this.onBlur = () => {\n      this.setState({\n        isFocused: false\n      });\n    };\n    this.render = () => {\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      if (theme) {\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : \"gray\"}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WebcamCapture, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nexport default _c2 = withStreamlitConnection(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"WebcamCapture\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","useEffect","Webcam","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamCapture","_s","webcamRef","useRef","imageSrc","setImageSrc","useState","undefined","isRecording","setIsRecording","script","document","createElement","src","async","body","appendChild","removeChild","capture","useCallback","current","getScreenshot","imageData","instanceId","quaternion","translationVector","Quaternion","window","getPoseData","setComponentValue","error","console","startRecording","stopRecording","captureInterval","setInterval","clearInterval","children","ref","forceScreenshotSourceSize","screenshotFormat","videoConstraints","height","width","audio","mirrored","video","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alt","_c","MyComponent","constructor","args","state","isFocused","onFocus","setState","onBlur","render","theme","props","style","borderStyling","primaryColor","border","outline","_c2","$RefreshReg$"],"sources":["/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst WebcamCapture = () => {\n  const webcamRef = React.useRef(null);\n  const [imageSrc, setImageSrc] = React.useState(undefined);\n  const [isRecording, setIsRecording] = React.useState(false);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"/script/pose.js\";\n    script.async = true;\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n\n  const capture = React.useCallback(async () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    const imageData = {\n      instanceId: \"randomString\",\n      quaternion: undefined,\n      translationVector: undefined, \n      imageSrc: imageSrc,\n    };\n\n    try {\n      // Fetch quaternion and translation data from the HTML document\n      const { Quaternion, \"Translation Vector\": translationVector } = await window.getPoseData();\n      imageData.quaternion = Quaternion;\n      imageData.translationVector = translationVector;\n\n      Streamlit.setComponentValue({ imageData });\n    } catch (error) {\n      console.error(\"Error fetching pose data:\", error);\n    }\n  }, [webcamRef, setImageSrc]);\n\n  const startRecording = () => {\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  useEffect(() => {\n    let captureInterval;\n\n    if (isRecording) {\n      captureInterval = setInterval(() => {\n        capture();\n      }, 1000);\n    } else {\n      clearInterval(captureInterval);\n    }\n\n    return () => {\n      clearInterval(captureInterval);\n    };\n  }, [isRecording, capture]);\n\n  return (\n    <>\n      <Webcam\n        ref={webcamRef}\n        forceScreenshotSourceSize\n        screenshotFormat=\"image/jpeg\"\n        videoConstraints={{\n          height: 720,\n          width: 1280,\n        }}\n        height=\"360\"\n        width=\"640\"\n        audio={true}\n        mirrored={true}\n        video={isRecording}\n      />\n      <div>\n      <button onClick={() => { isRecording ? stopRecording() : (startRecording()) }}>\n        {isRecording ? \"Stop Recording\" : \"Start Recording\"}\n      </button>\n      </div>\n      {imageSrc && <img src={imageSrc} alt=\"captured\" />}\n    </>\n  );\n};\n\nclass MyComponent extends StreamlitComponentBase {\n  state = { isFocused: false };\n\n  onFocus = () => {\n    this.setState({ isFocused: true });\n  };\n\n  onBlur = () => {\n    this.setState({ isFocused: false });\n  };\n\n  render = (): ReactNode => {\n    const { theme } = this.props;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return (\n      <div>\n        <WebcamCapture />\n      </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}