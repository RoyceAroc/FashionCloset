{"ast":null,"code":"var _jsxFileName = \"/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = () => {\n  _s();\n  const webcamRef = React.useRef(null);\n  const [imageSrc, setImageSrc] = React.useState(undefined);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  }, [webcamRef, setImageSrc]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      forceScreenshotSourceSize: true,\n      videoConstraints: {\n        height: 720,\n        width: 1280\n      },\n      height: \"360\",\n      width: \"640\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capture,\n        children: \"Capture photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: \"captured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n_s(WebcamCapture, \"Nfzyc72Ijsy1BFLk8zp7XZ4zb2c=\");\n_c = WebcamCapture;\nclass MyComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFocused: false\n    };\n    this.onFocus = () => {\n      this.setState({\n        isFocused: true\n      });\n    };\n    this.onBlur = () => {\n      this.setState({\n        isFocused: false\n      });\n    };\n    this.render = () => {\n      const {\n        theme\n      } = this.props;\n      const style = {};\n      if (theme) {\n        const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : \"gray\"}`;\n        style.border = borderStyling;\n        style.outline = borderStyling;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WebcamCapture, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nexport default _c2 = withStreamlitConnection(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"WebcamCapture\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","Webcam","jsxDEV","_jsxDEV","Fragment","_Fragment","WebcamCapture","_s","webcamRef","useRef","imageSrc","setImageSrc","useState","undefined","capture","useCallback","current","getScreenshot","children","ref","forceScreenshotSourceSize","videoConstraints","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","MyComponent","constructor","args","state","isFocused","onFocus","setState","onBlur","render","theme","props","style","borderStyling","primaryColor","border","outline","_c2","$RefreshReg$"],"sources":["/Users/royce/Desktop/aiatl/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport Webcam from \"react-webcam\";\n\nconst WebcamCapture = () => {\n  const webcamRef = React.useRef(null);\n  const [imageSrc, setImageSrc] = React.useState(undefined);\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImageSrc(imageSrc);\n  }, [webcamRef, setImageSrc]);\n\n  return (\n    <>\n      <Webcam\n        ref={webcamRef}\n        forceScreenshotSourceSize\n        videoConstraints={{\n          height: 720,\n          width: 1280,\n        }}\n        height=\"360\"\n        width=\"640\"\n      />\n      <div>\n        <button onClick={capture}>Capture photo</button>\n      </div>\n      {imageSrc && <img src={imageSrc} alt=\"captured\" />}\n    </>\n  );\n};\n\nclass MyComponent extends StreamlitComponentBase {\n  state = { isFocused: false };\n\n  onFocus = () => {\n    this.setState({ isFocused: true });\n  };\n\n  onBlur = () => {\n    this.setState({ isFocused: false });\n  };\n\n  render = (): ReactNode => {\n    const { theme } = this.props;\n    const style: React.CSSProperties = {};\n\n    if (theme) {\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"\n      }`;\n      style.border = borderStyling;\n      style.outline = borderStyling;\n    }\n\n    return (\n      <div>\n        <WebcamCapture />\n      </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);\n"],"mappings":";;AAAA,SAEEA,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAChC,OAAOC,KAAK,MAAqB,OAAO;AACxC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGR,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAACC,SAAS,CAAC;EAEzD,MAAMC,OAAO,GAAGd,KAAK,CAACe,WAAW,CAAC,MAAM;IACtC,MAAML,QAAQ,GAAGF,SAAS,CAACQ,OAAO,CAACC,aAAa,CAAC,CAAC;IAClDN,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC,EAAE,CAACF,SAAS,EAAEG,WAAW,CAAC,CAAC;EAE5B,oBACER,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA,CAACF,MAAM;MACLkB,GAAG,EAAEX,SAAU;MACfY,yBAAyB;MACzBC,gBAAgB,EAAE;QAChBC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE;MACT,CAAE;MACFD,MAAM,EAAC,KAAK;MACZC,KAAK,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFxB,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAQyB,OAAO,EAAEd,OAAQ;QAAAI,QAAA,EAAC;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,EACLjB,QAAQ,iBAAIP,OAAA;MAAK0B,GAAG,EAAEnB,QAAS;MAACoB,GAAG,EAAC;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClD,CAAC;AAEP,CAAC;AAACpB,EAAA,CA3BID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AA6BnB,MAAM0B,WAAW,SAASlC,sBAAsB,CAAC;EAAAmC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC/CC,KAAK,GAAG;MAAEC,SAAS,EAAE;IAAM,CAAC;IAAA,KAE5BC,OAAO,GAAG,MAAM;MACd,IAAI,CAACC,QAAQ,CAAC;QAAEF,SAAS,EAAE;MAAK,CAAC,CAAC;IACpC,CAAC;IAAA,KAEDG,MAAM,GAAG,MAAM;MACb,IAAI,CAACD,QAAQ,CAAC;QAAEF,SAAS,EAAE;MAAM,CAAC,CAAC;IACrC,CAAC;IAAA,KAEDI,MAAM,GAAG,MAAiB;MACxB,MAAM;QAAEC;MAAM,CAAC,GAAG,IAAI,CAACC,KAAK;MAC5B,MAAMC,KAA0B,GAAG,CAAC,CAAC;MAErC,IAAIF,KAAK,EAAE;QACT,MAAMG,aAAa,GAAI,aACrB,IAAI,CAACT,KAAK,CAACC,SAAS,GAAGK,KAAK,CAACI,YAAY,GAAG,MAC7C,EAAC;QACFF,KAAK,CAACG,MAAM,GAAGF,aAAa;QAC5BD,KAAK,CAACI,OAAO,GAAGH,aAAa;MAC/B;MAEA,oBACEzC,OAAA;QAAAe,QAAA,eACEf,OAAA,CAACG,aAAa;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAEV,CAAC;EAAA;AACH;AAEA,eAAAqB,GAAA,GAAejD,uBAAuB,CAACiC,WAAW,CAAC;AAAC,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}